# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 16:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/FAQs/Software_FAQs.md:1
msgid "Software FAQs"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:3
msgid "Can other operating systems besides Ubuntu be used?"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:5
msgid ""
"We have only tested on Ubuntu which means it's the only operating system "
"we currently officially support. Users are always welcome to try "
"different operating systems and can share their patches with the "
"community if they are successfully able to use them."
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:12
msgid "How can I perform step-by-step debugging?"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:14
msgid ""
"The majority of bugs can be found through logging (using AERROR, AINFO, "
"ADEBUG). If step-by-step debugging is needed, we recommend using gdb."
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:19
msgid "How do I add a new module"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:21
msgid ""
"Apollo currently functions as a single system, therefore before adding a "
"module to it, understand that there would be a lot of additional work to "
"be done to ensure that the module functions perfectly with the other "
"modules of Apollo. Simply add your module to the `modules/` folder. You "
"can use `modules/routing` as an example, which is a relatively simple "
"module. Write the BUILD files properly and apollo.sh will build your "
"module automatically"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:30
msgid ""
"Build error \"docker: Error response from daemon: failed to copy files: "
"userspace copy failed\":"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:32
msgid ""
"An error message like this means that your system does not have enough "
"space to build Apollo. To resolve this issue, run the following command "
"to free up some space on your host:"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:40
msgid "Run `bash apollo.sh clean -a` inside Docker to free more."
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:44
msgid "Bootstrap error: unix:///tmp/supervisor.sock refused connection"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:46
msgid ""
"There could be a number of reasons why this error occurs. Please follow "
"the steps recommended in the [following "
"thread](https://github.com/ApolloAuto/apollo/issues/5344). There are "
"quite a few suggestions. If it still does not work for you, comment on "
"the thread mentioned above."
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:54
msgid "My OS keeps freezing when building Apollo 3.5?"
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:56
msgid ""
"If you see an error like this, you do not have enough memory to build "
"Apollo. Please ensure that you have at least **16GB** memory available "
"before building Apollo. You could also find `--jobs=$(nproc)` in "
"apollo.sh file and replace it with `--jobs=2`. This will make build "
"process to use only 2 cores. Building will be longer, but will use less "
"memory."
msgstr ""

#: ../../docs/FAQs/Software_FAQs.md:64
msgid "**More Software FAQs to follow.**"
msgstr ""

