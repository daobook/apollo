# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 16:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:1
msgid "How to add a new lidar tracker algorithm"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:3
msgid ""
"The processing flow of lidar perception module is shown below: ： "
"![](https://github.com/ApolloAuto/apollo/blob/master/docs/specs/images/lidar_perception_data_flow.png)"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:6
msgid ""
"The tracker algorithm introduced by this document is located at "
"Recognition Component listed below. Current architecture of Recognition "
"Component is shown： ![lidar recognition](images/lidar_recognition.png)"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:6
msgid "lidar recognition"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:9
msgid ""
"As we can see from above structure, lidar tracker algorithm, such as "
"MlfEngine, is the derived class of `base_multi_target_tracker` which acts"
" as a abstract class member of `base_lidar_obstacle_tracking` located in "
"Recognition Component. Next, We will introduce how to add a new lidar "
"tracker algorithm."
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:11
msgid ""
"The default tracking algorithm of Apollo is MlfEngine，which cloud be "
"easily changed or replaced by other algorithms. This document will "
"introduce how to add a new lidar tracker algorithm, the basic task "
"sequence is listed below："
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:13
#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:20
msgid "Define a class that inherits `base_multi_target_tracker`"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:14
#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:90
msgid "Implement the class `NewLidarTracker`"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:15
#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:125
msgid "Add config and param proto file for `NewLidarTracker`"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:16
#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:168
msgid "Update lidar_obstacle_tracking.conf"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:18
msgid "The steps are elaborated below for better understanding:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:22
msgid ""
"All the lidar tracker algorithms shall inherit "
"`base_multi_target_tracker`，which defines a set of interfaces. Here is an"
" example of the tracker implementation:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:48
msgid "The function signature of `base_multi_target_tracker` is pre-defined："
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:92
msgid ""
"To ensure the new tracker could function properly, `NewLidarTracker` "
"should at least override the interface Init(), Track(), Name() defined in"
" `base_multi_target_tracker`. Init() is resposible for config loading, "
"class member initialization, etc. And Track() will implement the basic "
"logic of algorithm. A concrete `NewLidarTracker.cc` example is shown："
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:127
msgid ""
"Follow the following steps to add config and param proto file for the new"
" tracker:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:129
msgid ""
"Define a `proto` for the new tracker configurations according to the "
"requirements of your algorithm. As a reference， you can found and follow "
"the `proto` definition of `multi_lidar_fusion` at "
"`modules/perception/lidar/lib/tracker/multi_lidar_fusion/proto/multi_lidar_fustion_config.proto`"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:131
msgid ""
"Once finishing your `proto`, for example `newlidartracker_config.proto`, "
"add the following content:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:143
msgid ""
"Refer to "
"`modules/perception/production/conf/perception/lidar/config_manager.config`"
" and add your tracker path:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:149
msgid ""
"Refer to the `newlidartracker.config` in the same folder and create "
"`modules/multi_lidar_fusion.config`:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:162
msgid ""
"Refer to `multi_lidar_tracker` and create `newlidartracker` folder at "
"`modules/perception/production/data/perception/lidar/models/`. Add "
"`.conf` files for different sensors："
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:170
msgid ""
"To use your new lidar tracker algorithm in Apollo，you need to modify the "
"value of `multi_target_tracker` to your tracker's name in "
"`lidar_obstacle_tracking.conf` located in corresponding sensor folder in "
"`modules/perception/production/data/perception/lidar/models/lidar_obstacle_pipline`"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_tracker_algorithm.md:172
msgid ""
"Once you finished the above modifications, you new tracker should take "
"effect in Apollo."
msgstr ""

