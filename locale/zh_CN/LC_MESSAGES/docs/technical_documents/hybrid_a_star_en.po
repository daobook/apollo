# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 16:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/technical_documents/hybrid_a_star_en.md:1
msgid "GENERATE COARSE TRAJECTORY IN THE OPEN SPACE"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:3
msgid "Introduction"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:4
msgid ""
"The goal of htbrid_a_star is to generate the coarse trajectory in the "
"open space. Hybrid_a_star contains node3d， grid_search， reeds_shepp_path "
"and hybrid_a_star. hybrid_a_star is the most important component "
"generating the coarse trajectory and call the grid_search and "
"reeds_shepp_path."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:6
msgid "Where is the code"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:7
msgid ""
"Please refer to [hybrid a "
"star.cc](https://github.com/ApolloAuto/apollo/tree/master/modules/planning/open_space/coarse_trajectory_generator/hybrid_a_star.cc)"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:9
msgid "Code Reading"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:10
msgid ""
"Input: current point(planned start point), goal point(planned end point),"
" ROI_xy_boundary(the maximum and minimum boundary value of x and y), "
"obstacles vertices vector(the corner position information). The function "
"is follow:"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:17
msgid ""
"The input HybridAStar::Plan() is called by the "
"open_space_trajectory_provider.cc, please refer to "
"[open_space_trajectory_provider.cc](https://github.com/ApolloAuto/apollo/blob/master/modules/planning/tasks/optimizers/open_space_trajectory_generation/open_space_trajectory_provider.cc)"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:19
msgid ""
"Construct obstacles_linesegment_vector. The main method is to form a line"
" segment from a single obstacle point in order; then, each obstacle line "
"segment is stored in obstacles_linesegment_vector that will be used to "
"generate the DP map."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:35
msgid ""
"Construct the planned point same as Node3d, please refer to "
"[node3d.h](https://github.com/ApolloAuto/apollo/blob/master/modules/planning/open_space/coarse_trajectory_generator/node3d.h)."
" The planned starting point and the ending point are constructed in the "
"form of Node3d that will be save to open set and will be checked by the "
"ValidityCheck() function."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:43
msgid "Enter the main while loop to get a set of nodes."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:44
msgid ""
"Exit trajectory generation when open_pq_ is empty. The open_pq_ is a "
"std::priority_queue type that the first element represents the order of "
"nodes in the open set, the second element represents the cost of nodes "
"which storage in descending order."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:45
msgid ""
"Use AnalyticExpansion() function to determine whether there is a "
"collision free trajectory that based on the reeds_shepp_path from current"
" point to target end point. if it exists, exit the while loop search."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:51
msgid ""
"Store the current point in the close set and Expand the next node "
"according to the bicycle kinematics model. The number of nodes is a "
"parameter. Generate the next node by Next_node_generator() function and "
"use ValidityCheck() function to detect this node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:53
msgid ""
"Generate the coarse trajectory by nodes. The GetResult() function is used"
" to generate the coarse trajectory."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:57
msgid ""
"Output: The optput is partial trajectory information, which include "
"x,y,phi,v,a,steer,s."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:59
msgid "Algorithm Detail"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:63
msgid ""
"The detection method is based on boundary range judgment and boundary "
"overlap judgment."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:64
msgid "Parameter: the input parameter is node which same as node3d."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:65
msgid "Introduction: the function is used to check for collisions."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:66
#: ../../docs/technical_documents/hybrid_a_star_en.md:78
#: ../../docs/technical_documents/hybrid_a_star_en.md:88
#: ../../docs/technical_documents/hybrid_a_star_en.md:99
#: ../../docs/technical_documents/hybrid_a_star_en.md:111
msgid "Process detail:"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:67
msgid ""
"Boundary range judgment. If the x and y of node exceed the range of the "
"corresponding x and y of boundary, then return false,         reprents "
"invalid."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:68
msgid ""
"Boundary overlap judgment. If the bounding box of vehicle overlaps any "
"line segment, then return false. Judge the overlap by          whether "
"the line and box intersect."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:75
msgid ""
"the function is used to generate dp map by dynamic programming, please "
"refer "
"(https://github.com/ApolloAuto/apollo/blob/master/modules/planning/open_space/coarse_trajectory_generator/grid_search.cc)"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:76
msgid ""
"Parameter: ex and ey are the postion of goal point, XYbounds_ is the "
"boundary of x and y, obstacles_linesegments_ is the line            "
"segments which is composed of boundary point."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:77
msgid "Introduction: the function is used to generate the dp map"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:79
msgid "Grid the XYbounds_ according to grid resolution, then get the max grid."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:80
msgid "Dp map store the cost of node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:85
msgid ""
"The function is used to check if an analystic curve could be connected "
"from current configuration to the end configuration without collision. if"
" so, search ends."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:86
msgid "Parameter: current node is start point of planning."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:87
msgid ""
"introduction: the function based on the reeds shepp method which is a "
"geometric algorithm composed of arc and line. Reeds shepp is       used "
"for search acceleration."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:89
msgid ""
"Generate the reeds shepps path by the ShortestRSP() function. The length "
"is optimal and shortest."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:90
msgid ""
"Check the path is collision free by the RSPCheck() function which call "
"the ValidityCheck() function."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:91
msgid "Load the whole reeds shepp path as nodes and add nodes to the close set."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:96
msgid "The funtion is used to generate next node based on the current node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:97
msgid "Parameter: the current node of the search and the next node serial number"
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:98
msgid ""
"Introduction: the next node is calculated based on steering wheel uniform"
" sampling and vehicle kinematics."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:100
msgid ""
"The steering angle is calculated according to the number and order of "
"sampling points."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:101
msgid "Generate the next node according to the kinematic model."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:102
msgid "Check if the next node runs outside of XY boundary."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:108
msgid "The function is used to calculate the cost of node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:109
msgid "Parameter: current node(vehicle position) and next node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:110
msgid ""
"Introduction: the calculated cost include trajectory cost and heuristic "
"cost considering obstacles based on holonomic."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:112
msgid ""
"the trajectory cost include the current node's trajectory cost and the "
"trajectory cost from current node to next node."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:113
msgid ""
"trajectory cost is determined by the sampling distance, the gear change "
"between them and the steering change rate."
msgstr ""

#: ../../docs/technical_documents/hybrid_a_star_en.md:114
msgid "heuristic cost is get from the dp map."
msgstr ""

