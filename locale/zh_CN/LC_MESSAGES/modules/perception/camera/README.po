# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Sphinx
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Sphinx \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-22 16:53+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../modules/perception/camera/README.md:1
msgid "Camera Perception"
msgstr ""

#: ../../modules/perception/camera/README.md:3
msgid "Introduction"
msgstr ""

#: ../../modules/perception/camera/README.md:4
msgid ""
"Apollo 7.0 camera obstacle add a new model based on "
"[SMOKE](https://github.com/lzccccc/SMOKE). SMOKE is a Single-Stage "
"monocular 3D object detection model which made some improvements for 3D "
"vision on the CenterNet. We did some adaptation on the SMOKE and trained "
"on [waymo open dateset](https://waymo.com/open/).Finally, our new model "
"is added to Apollo as a new components."
msgstr ""

#: ../../modules/perception/camera/README.md:7
msgid "Architecture"
msgstr ""

#: ../../modules/perception/camera/README.md:8
msgid ""
"Here we mainly focus on the modifications based on SMOKE,  more detail "
"about SMOKE model please reference paper."
msgstr ""

#: ../../modules/perception/camera/README.md:9
msgid ""
"Deformable conv can not convert onnx or libtorch. Therefore, we modify "
"the deformable convolution in the backbone to normal convolution, which "
"will lead to the decline of mAP;"
msgstr ""

#: ../../modules/perception/camera/README.md:11
msgid ""
"Because the 3D center points of some obstacles may appear outside the "
"image, these obstacles will be filtered out during training, resulting in"
" missed detection. Therefore, we take the center point of 2D bounding "
"boxes to represent the obstacle, and add a head prediction offset term to"
" recover the 3D center point;"
msgstr ""

#: ../../modules/perception/camera/README.md:13
msgid ""
"We add the head to predict the width and height of the 2D bounding box, "
"and  directly calculate the 2D bbox of the obstacle with 2D center;"
msgstr ""

#: ../../modules/perception/camera/README.md:15
msgid ""
"Using 2D bounding box and other 3D information, we use post-processing "
"geometric constraints to optimize the predicted position information. "
"Firstly, we use the 3D information predicted by the model to calculate "
"the 3D bounding box of the obstacle, as shown in Formula 1. $\\theta$ "
"represents the rotation of obstacle，$h,w,l$ is the dimensions and $x,y,z$"
" represent location。"
msgstr ""

#: ../../modules/perception/camera/README.md:30
msgid ""
"Then, according to the corresponding relationship between the bounding "
"boxes as the constraint condition, we optimized the position information "
"of the obstacle as shown in formula 2."
msgstr ""

#: ../../modules/perception/camera/README.md:43
msgid "The final network structure is shown below"
msgstr ""

#: ../../modules/perception/camera/README.md:48
msgid "Training"
msgstr ""

#: ../../modules/perception/camera/README.md:49
msgid ""
"We trained model on the waymo open source dataset. Firstly, we used the "
"conversion tool provided by the mmdetction3d framework to convert the "
"waymo data into Kitti format. For specific operations, please refer to "
"the [open mmlab documentation](https://github.com/open-"
"mmlab/mmdetection3d/blob/master/docs/datasets/waymo_det.md). We only "
"saved the front camera (image_ 0) data. Data conversion will take up a "
"lot of space. Please ensure that your disk has enough space. After "
"converting waymo data into Kitti format, we only need to make a few "
"adjustments to the code to train and test. The test results on the waymo "
"validation set are shown in the following table:"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "Car"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "Pedestrian"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "Cyclist"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "mAP"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "6.88"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "0.35"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "0.32"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "bev"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "11.84"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "0.41"
msgstr ""

#: ../../modules/perception/camera/README.md:39
msgid "0.40"
msgstr ""

#: ../../modules/perception/camera/README.md:60
msgid "The visualize on waymo image data as follwos："
msgstr ""

#: ../../modules/perception/camera/README.md:66
msgid ""
"At the same time, we also provide the paddle training code of the model "
"with the Baidu PaddlePaddle team, and please refer to the [SMOKE-"
"Paddle](https://github.com/PaddlePaddle/models/tree/develop/PaddleCV/3d_vision/SMOKE)"
" for more details."
msgstr ""

#: ../../modules/perception/camera/README.md:68
msgid "Online"
msgstr ""

#: ../../modules/perception/camera/README.md:69
msgid ""
"Here, we use libtorch for online deployment and use the torch.jit.trace "
"function of pytorch. We put camera internal parameters and image scaling "
"coefficient into the model as parameters. For details, please refer to "
"the code: "
"\"modules/perception/camera/lib/obstacle/detector/smoke/smoke_obstacle_detector.cc\""
msgstr ""

#: ../../modules/perception/camera/README.md:72
msgid "Launch"
msgstr ""

#: ../../modules/perception/camera/README.md:73
msgid ""
"We provide a separate dag file to start the smoke obstacle detection "
"model, which can be started by the following command:"
msgstr ""

#: ../../modules/perception/camera/README.md:78
msgid "Reference"
msgstr ""

#: ../../modules/perception/camera/README.md:79
msgid ""
"Liu, Zechen, Zizhang Wu, and Roland Tóth. \"Smoke: single-stage monocular"
" 3d object detection via keypoint estimation.\" In Proceedings of the "
"IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops,"
" pp. 996-997. 2020."
msgstr ""

#: ../../modules/perception/camera/README.md:81
msgid ""
"{MMDetection3D: OpenMMLab} next-generation platform for general 3D object"
" detection} https://github.com/open-mmlab/mmdetection3d"
msgstr ""

