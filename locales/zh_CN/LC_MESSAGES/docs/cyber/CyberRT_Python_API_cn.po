# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-27 10:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:1
msgid "CyberRT Python"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:3
msgid "1. 背景"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:5
msgid "Cyber 核心代码是由 C++ 开发，同时为了方便开发者，提供了 Python 接口。"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:7
msgid "2. CyberRT Python 接口实现思路"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:9
msgid ""
"Cyber Python 接口的实现思路是在 Cyber C++ 实现的基础上，做了一层 Python 的封装，由 Python 来调用 C++ "
"的实现函数。Cyber Python Wrapper 的实现没有使用 swig 等第三方工具，完全自主实现，以此保证代码的高可维护性和可读性。"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:11
msgid "3. 主要接口"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:13
msgid "目前提供的主要接口包括："
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:15
msgid "channel 读、写"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:16
msgid "server/client 通信"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:17
msgid "record 信息查询"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:18
msgid "record 文件读、写"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:19
msgid "Time/Duration/Rate 时间操作"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:20
msgid "Timer"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:22
msgid "3.1 Channel 读写接口"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:24
msgid "使用步骤是："
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:26
msgid "首先创建 Node;"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:27
msgid "创建对应的 reader 或 writer；"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:28
msgid "如果是向 channel 写数据，调用 writer 的 write 接口；"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:29
msgid "如果是从 channel 读数据，调用 node 的 spin，对收到的消息进行消费；"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:31
#: ../../../docs/cyber/CyberRT_Python_API_cn.md:92
msgid "接口定义如下："
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:80
msgid "3.2 Record 接口"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:82
msgid "Record 读的操作是："
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:84
msgid "创建一个 RecordReader;"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:85
msgid "对 Record 进行迭代读；"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:87
msgid "Record 写的操作是："
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:89
msgid "创建一个 RecordWriter"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:90
msgid "对 Record 进行写消息；"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:179
msgid "3.3 Time 接口"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:203
msgid "3.4 Timer 接口"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:226
msgid "4. 例子"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:228
msgid "4.1 读 channel （参见 cyber/python/cyber_py3/examples/listener.py)"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:263
msgid "4.2 写 channel（参见 cyber/python/cyber_py3/examples/talker.py)"
msgstr ""

#: ../../../docs/cyber/CyberRT_Python_API_cn.md:303
msgid "4.3 读写消息到 Record 文件（参见 cyber/python/cyber_py3/examples/record.py)"
msgstr ""

