# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-22 19:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:1
msgid "fr"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:3
msgid "引言"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:4
msgid ""
"Lidar是一种常用的环境感知传感器，利用脉冲激光来照射目标并接收目标的反射脉冲，根据激光返回的时间来计算与目标的距离。通过对目标多次全方位的测量，可以得到目标环境的数字3D结构模型。Apollo平台默认支持velodyne"
" "
"16线，32线，64线和128线等多种型号的lidar。该说明主要介绍Lidar驱动的主要功能以及如何在apollo平台中添加一款新的lidar设备驱动。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:6
msgid "Velodyne驱动的主要部分"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:8
msgid ""
"[Driver](../../modules/drivers/lidar/velodyne/driver): "
"通过网络端口接收lidar硬件产生的UDP数据包，将每一帧封装成VelodyneScan格式后发送。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:10
msgid ""
"[Parser](../../modules/drivers/lidar/velodyne/parser): "
"接收VelodyneScan数据，把VelodyneScan中的点由球面坐标系转换成空间直角坐标系下的pointcldoud点云格式后发送。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:12
msgid ""
"[Compensator](../../modules/drivers/lidar/velodyne/compensator): "
"接收点云数据和pose数据，根据每个点的对应的pose信息把点转换到点云中最大时刻对应的坐标系下，减小由车辆自身的运动带来的误差。需要点云数据中包含每个点的时间戳信息。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:16
msgid "添加新lidar驱动的步骤"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:18
msgid "1. 熟悉cyber框架"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:20
msgid "cyber框架下系统中每一个功能单元都可以抽象为一个component，通过channel相互间进行通信，然后根据dag(有向无环图)配置文件，构建成相应的pipeline，实现数据的流式处理。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:22
msgid "2. 消息定义"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:24
msgid "apollo已经预定义了点云的消息格式，所以只需要为新lidar定义一个存储原始扫描数据的proto消息，用于数据的存档和离线开发调试，相比于点云数据，存档原始数据可以大量节省存储空间。一个新的扫描数据消息可以类似如下定义:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:37
msgid "在velodyne驱动中，其扫描数据消息定义为[VelodyneScan](../../modules/drivers/lidar/velodyne/proto/velodyne.proto#L29)."
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:39
msgid "3. 读取原始数据"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:41
msgid "lidar每秒会产生大量数据，一般通过UDP协议来进行数据的高效传输。编写一个DriverComponent类，继承于无模版参数Component类；在Init函数中启动一个异步poll线程，不断从相应的端口读取lidar数据；然后根据需求如将一段时间内的数据打包为一帧ScanData，如扫描一圈为一帧；最后通过writer将ScanData写至相应的channel发送出去。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:74
msgid "4. 解析扫描数据，生成点云。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:76
msgid ""
"编写一个Parser类，输入为一帧ScanData，根据lidar自己的数据协议，解析出每一个点的时间戳，x/y/z三维坐标，以及反射强度，并组合成一帧点云。每个点都位于以lidar为原点的FLU（Front:"
" x, Left: y, Up: z）坐标系下。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:88
msgid "然后定义一个ParserComponent，继承于ScanData实例的Component模板类。接收ScanData消息，生成点云消息，发送点云消息。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:119
msgid "5. 对点云进行运行补偿"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:121
msgid "运动补偿是一个通用的点云处理过程，可以直接复用velodyne driver中compensator模块的算法逻辑。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:123
msgid "6. 配置dag文件"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:125
msgid "将各个数据处理环节定义为component后，需要将各个component组成一个lidar数据处理pipeline，如下配置lidar_driver.dag:"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:165
msgid "7. 运行lidar驱动并查看点云"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:166
msgid "完成以步骤后，就可以通过以下命令来启动lidar驱动。"
msgstr ""

#: ../../docs/howto/how_to_add_a_new_lidar_driver_cn.md:171
msgid "此时通过`cyber_visualizer`选择对应的点云channel，就可以可视化查看点云了。"
msgstr ""

