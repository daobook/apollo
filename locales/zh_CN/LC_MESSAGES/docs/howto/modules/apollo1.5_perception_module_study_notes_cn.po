# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo 文档 package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo 文档 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-23 19:11+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:1
msgid "Perception Module 分析"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:2
msgid "功能："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:3
msgid "感知障碍物，预测障碍物的运动轨迹。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:5
msgid "数据流图："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:6
msgid "![perception data flow](images/perception_node_arch.bmp)"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:6
msgid "perception data flow"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:8
msgid "输入："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:9
msgid "点云数据：/apollo/sensor/velodyne64/compensator/PointCloud2。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:10
msgid "坐标系转换关系：/tf（world->novatel）。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:11
msgid "HD Map。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:12
msgid "LiDAR外参：/tf_static（novatel->velodyne64）。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:13
msgid "注：在最小仿真系统中，/tf，/tf_static和HD map都不是以topic形式作为输入的。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:15
msgid "输出："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:16
msgid "带航向和速度，障碍物的3D轨道消息：/apollo/perception/obstacles。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:18
msgid "代码分析："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:19
msgid "main.cc："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:20
msgid "主节点文件。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:21
msgid "通过apollo顶层宏APOLLO_MAIN，创建ros节点Perception。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:23
msgid "perception.h，perception.cc："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:24
msgid "模块主体文件。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:25
msgid "定义实现Perception类，用于表述perception模块。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:26
msgid "Name()函数：返回模块名字，也就是ros节点名字，即\"perception\"。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:27
msgid ""
"Init()函数：模块初始化函数。AdapterManager::Init(）函数通过配置文件adapter.conf创建node "
"handle，以及相应的topics；lidar_process_->Init()函数配置对激光雷达数据处理的算法；检测激光雷达是否有数据；注册点云数据的回调函数。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:28
msgid "OnPointCloud()函数：数据处理回调函数。判断lidar处理算法是否就绪；lidar_process_->Process()函数使用前面注册的雷达处理算法依次处理雷达数据；lidar_process_->GeneratePbMsg()函数使用处理后的数据生成障碍物信息；AdapterManager::PublishPerceptionObstacles()函数基于adapter架构发布障碍物信息。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:30
msgid "lidar_process.h，lidar_process.c："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:31
msgid "激光雷达数据处理文件，主要包含激光雷达的处理算法。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:32
msgid "定义实现LidarProcess类，用于处理激光雷达数据。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:33
msgid ""
"init()函数：RegistAllAlgorithm()函数注册激光雷达处理函数，分别是HdmapROIFilter，CNNSegmentation，MinBoxObjectBuilder，HmObjectTracker其对应的时激光雷达数据处理流程。InitFrameDependence()函数配置HD"
" "
"map。InitAlgorithmPlugin()函数将roi_filter_,segmentor_,object_builder_,tracker_实例化，可能是只作为插件，并调用其init()方法。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:34
msgid ""
"Process(const sensor_msgs::PointCloud2& "
"message)函数：调用GetVelodyneTrans()函数获取velodyne2world坐标系转化关系，调用TransPointCloudToPCL()函数由Lidar数据生成PCL，存入point_cloud变量。然后调用Process(timestamp_,"
" point_cloud, velodyne_trans)函数。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:35
msgid ""
"Process(timestamp_, point_cloud, "
"velodyne_trans)函数：hdmap_input_->GetROI()函数从HD "
"map获取ROI；roi_filter_->Filter()函数获取ROI的索引indices；segmentor_->Segment()函数对根据indices对障碍物进行分割，object_builder_->Build()函数重建障碍物，构成6边形；tracker_->Track()函数"
"\t"
"预测障碍物运动轨迹。这是perception算法的核心部分，其四个步骤分别使用四种不同的算法，详细算法需要进一步研究。此步结束之后，对激光雷达数据处理结束，剩余部分就是合成障碍物，然后发布出去。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:37
msgid "HD map的引入："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:38
msgid "HD map的引入是通过hdmap_input.cc和hdmap_input.h文件实现，通过定义HDMapInput类表述和操作HD map。"
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:40
msgid "激光雷达数据处理算法："
msgstr ""

#: ../../docs/howto/modules/apollo1.5_perception_module_study_notes_cn.md:41
msgid "每个算法对应obstacle\\lidar\\下的相应的一个目录，每个算法被包装为一个插件类。每种算法都牵涉比较深的相关数学理论知识，后续可将每一项作为专题研究，例如segment，其核心即是CNN算法。"
msgstr ""

