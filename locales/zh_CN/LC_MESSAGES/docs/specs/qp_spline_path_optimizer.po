# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-22 19:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docs/specs/qp_spline_path_optimizer.md:1
msgid "QP-Spline-Path Optimizer"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:3
msgid ""
"_**Tip**: to read the equations in the document, you are recommended to "
"use Chrome with [a plugin](https://chrome.google.com/webstore/detail/tex-"
"all-the-things/cbimabofgmfdkicghcadidpemeenbffn) or copy the latex "
"equation to [an online editor](http://www.hostmath.com/)_"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:5
msgid "Quadratic programming + Spline interpolation"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:7
msgid "1.  Objective function"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:9
msgid "1.1  Get path length"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:11
msgid ""
"Path is defined in station-lateral coordination system. The **s** range "
"from vehicle's current position to  default planning path length."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:13
msgid "1.2   Get spline segments"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:15
msgid ""
"Split the path into **n** segments. each segment trajectory is defined by"
" a polynomial."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:17
msgid "1.3  Define function for each spline segment"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:19
msgid ""
"Each segment ***i*** has accumulated distance $d_i$ along reference line."
" The trajectory for the segment is defined as a polynomial of degree five"
" by default."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:28
msgid "1.4  Define objective function of optimization for each segment"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:36
msgid "1.5  Convert the cost function to QP formulation"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:38
msgid "QP formulation:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:49
msgid ""
"Below is the example for converting the cost function into the QP "
"formulation."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:59
#: ../../docs/specs/qp_spline_path_optimizer.md:70
#: ../../docs/specs/qp_spline_path_optimizer.md:176
#: ../../docs/specs/qp_spline_path_optimizer.md:185
msgid "And"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:83
msgid "then we have,"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:99
msgid "extract the const outside the integration, we have,"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:128
msgid "Finally, we have"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:147
msgid ""
"Please notice that we got a 6 x 6 matrix to represent the derivative cost"
" of 5th order spline."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:151
msgid ""
"Similar deduction can also be used to calculate the cost of second and "
"third order derivatives."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:155
msgid "2  Constraints"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:157
msgid "2.1  The init point constraints"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:159
msgid ""
"Assume that the first point is ($s_0$, $l_0$), ($s_0$, $l'_0$) and "
"($s_0$, $l''_0$), where $l_0$ , $l'_0$ and $l''_0$ is the lateral offset "
"and its first and second derivatives on the init point of planned path, "
"and are calculated from $f_i(s)$, $f'_i(s)$, and $f_i(s)''$."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:161
msgid "Convert those constraints into QP equality constraints, using:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:167
msgid "Below are the steps of conversion."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:194
msgid "where i is the index of the segment that contains the $s_0$."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:196
msgid "2.2  The end point constraints"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:198
msgid ""
"Similar to the init point, the end point $(s_e, l_e)$ is known and should"
" produce the same constraint as described in the init point calculations."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:201
msgid "Combine the init point and end point, and show the equality constraint as:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:227
msgid "2.3  Joint smoothness  constraints"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:229
msgid ""
"This constraint is designed to smooth the spline joint.  Assume two "
"segments $seg_k$ and $seg_{k+1}$ are connected, and the accumulated **s**"
" of segment $seg_k$ is $s_k$. Calculate the constraint equation as:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:235
msgid "Below are the steps of the calculation."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:255
msgid "Then"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:268
msgid "Use $s_0$ = 0 in the equation."
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:270
msgid "Similarly calculate the equality constraints for:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:281
msgid "2.4  Sampled points for boundary constraint"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:283
msgid ""
"Evenly sample **m** points along the path, and check the obstacle "
"boundary at those points.  Convert the constraint into QP inequality "
"constraints, using:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:289
msgid ""
"First find the lower boundary $l_{lb,j}$ at those points $(s_j, l_j)$ and"
"  $j\\in[0, m]$ based on the road width and surrounding obstacles. "
"Calculate the inequality constraints as:"
msgstr ""

#: ../../docs/specs/qp_spline_path_optimizer.md:309
msgid ""
"Similarly, for the upper boundary $l_{ub,j}$, calculate the inequality "
"constraints as:"
msgstr ""

