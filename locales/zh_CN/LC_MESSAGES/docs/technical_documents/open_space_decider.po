# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-27 10:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../../docs/technical_documents/open_space_decider.md:1
msgid "OPEN SPACE DECIDER"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:3
msgid "Introduction"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:5
msgid ""
"Apollo planning is scenario based, where each driving case is treated as "
"a different driving scenario."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:7
msgid ""
"Open space decider is used to process related infomation and provide "
"information for subsequent optimizers."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:9
msgid "Where is the code"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:11
msgid ""
"Please refer [open space "
"decider](https://github.com/ApolloAuto/apollo/modules/planning/tasks/deciders/open_space_decider/open_space_roi_decider.cc)."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:13
msgid "Code Reading"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:15
msgid "Open space roi decider"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:17
msgid "Input : obstacles info \\ vehicle info \\ road info \\ parking space info."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:19
msgid "IN PARKING STAGE (roi_type == OpenSpaceRoiDeciderConfig::PARKING)"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:21
msgid "Check parking space id and parking space boundary, then get parking spot."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:27
msgid ""
"Search target parking spot on path and check whether the distance between"
" ADC and target parking spot is appropriate."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:33
msgid "Set ADC origin state, include ADC position and heading."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:39
msgid ""
"Get parking spot(left top \\ left down \\ right down \\ right top) points"
" info, convert parking spot points coordinates to vehicle coorinates, "
"according to the relative position and parking direction(inward or "
"outward) to set parking end pose."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:45
msgid ""
"Get parking boundary: convert parking spot points coordinates to vehicle "
"coorinates and get points' projections on reference line."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:54
msgid ""
"Get road boundary: it starts from parking space center "
"line(center_line_s) and extends a distance(roi longitudinal range) to "
"both sides along the s direction to get start_s and end_s."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:56
msgid ""
"Search key points(the point on the left/right lane boundary is close to a"
" curb corner) and anchor points(a start/end point or the point on path "
"with large curvatures) in this roi range."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:58
msgid ""
"Those key points and anchor points are called boundary points. The line "
"segements between those points are called roi parking boundarys."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:73
msgid ""
"Fuse line segements: remove repeat points of roi parking boundary to meet"
" the requirements of open space algorithm."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:79
msgid "IN PULL OVER STAGE (roi_type == OpenSpaceRoiDeciderConfig::PULL_OVER)"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:81
msgid ""
"The main process is same as parking stage, get pull over spot -> set "
"origin -> set pull over spot end pose -> get pull over boundary."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:94
msgid "IN PARK AND GO STAGE (roi_type == OpenSpaceRoiDeciderConfig::PARK_AND_GO)"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:96
msgid ""
"The main process is same as parking stage, set orgin from adc -> set park"
" and go end pose -> get park and go boundary."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:111
msgid ""
"By calling ```formulateboundaryconstraints()``` to gather vertice needed "
"by warm start and distance approach, then transform vertices into the "
"form of Ax > b."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:118
#: ../../../docs/technical_documents/open_space_decider.md:155
#: ../../../docs/technical_documents/open_space_decider.md:178
msgid "Return process status."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:120
msgid "Output: open space roi boundary and boundary constraints"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:122
msgid "Open space pre stop decider"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:124
msgid "Input: obstacles info \\ vehicle info \\ road info \\ parking space info"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:126
msgid "IN PARKING STAGE (OpenSpacePreStopDeciderConfig::PARKING)"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:127
msgid ""
"Check parking space info(parking spot id and parking spot points), fill "
"those info into target_parking_spot_ptr."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:129
msgid "Take the s info of parking space center line as target_s."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:136
msgid ""
"Base on ADC position, stop distance to target parking space and obstacle "
"positon to set stop fence."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:142
msgid "IN PULL OVER STAGE (OpenSpacePreStopDeciderConfig::PULL_OVER)"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:143
msgid ""
"Same with parking stage, check pull over pre stop -> set pull over stop "
"fence."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:157
msgid "Output: pre stop fence for open space planner."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:159
msgid "Open space fallback decider"
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:160
msgid "Input: obstacles info \\ vehicle info \\ road info \\ parking space info."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:162
msgid ""
"Base on the prdicted trajectory of obstacles, the bounding box info of "
"obstacles in each time interval is obtained, then we add it into "
"predicted_bounding_rectangles."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:168
msgid ""
"By calling ```IsCollisonFreeTrajectory()``` to determine whether it will "
"intersect with obstacles."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:176
msgid ""
"If ADC trajectroy is collision free, the chosen partitioned trajectory "
"can be used directly, otherwise a fallback trajectroy base on current "
"partition trajectroy will be gererated, which leads ADC stop inside "
"safety distance."
msgstr ""

#: ../../../docs/technical_documents/open_space_decider.md:180
msgid "Output: fallback trajectory."
msgstr ""

