# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-22 19:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docs/technical_documents/planning_component.md:1
msgid "Planning Component Introduction"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:3
msgid "Introduction"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:5
msgid ""
"This article describes the architecture of planning module. It mainly "
"consists of the following parts:"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:6
#: ../../docs/technical_documents/planning_component.md:16
msgid "Cyber component related knowledge"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:7
#: ../../docs/technical_documents/planning_component.md:19
msgid "How the messages are received and sent"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:8
msgid "How the trajectory is arranged and made up"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:10
msgid "Where is the code"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:12
msgid ""
"Please refer to "
"[code](https://github.com/ApolloAuto/apollo/blob/master/modules/planning/planning_component.h)."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:14
msgid "Code Reading"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:17
msgid ""
"Please refer to "
"[Cyber](https://github.com/ApolloAuto/apollo/blob/master/docs/cyber/CyberRT_Terms.md)."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:20
msgid "![Diagram](images/planning_component_api.png)"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:20
msgid "Diagram"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:22
msgid ""
"Input Messages are partially input from readers, which are defined in "
"PlanningComponent::Init(). For Planning component, readers receive "
"message types of "
"RoutingResponse/TrafficLightDetection/PadMessage/Stories/MapMsg and store"
" them in local for processing afterward. Another part of input messages "
"are defined in PlanningComponent::Proc(), where the planning process is "
"called when new messages arrives."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:25
msgid ""
"Process. PlanningComponent::Proc() function works like Reader's callback "
"function. Each time there are new messages of "
"prediction::PredictionObstacles/canbus::Chassis/localization::LocalizationEstimate,"
" this process is implemented till the end of this function."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:26
msgid ""
"Output. PlanningComponent output the message by the following line "
"`planning_writer_->Write(adc_trajectory_pb)`, in which the writer send "
"the final adc_trajectory_pb message to the cyber system. The writer is "
"initialized in PlanningComponent::Init(), just after the readers are "
"initialized."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:28
msgid "How the trajectory as planning component output is produced"
msgstr ""

#: ../../docs/technical_documents/planning_component.md:29
msgid ""
"Now we know how messages are input to and output from the planning "
"component. The work of planning module is basically processing the input "
"messages and producing an appropriate trajectory for the ADC. The final "
"goal of this is to ensure safety, comfort and passability. And different "
"algorithms are explored in Apollo in order to achieve or get closer to "
"this goal."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:30
msgid ""
"The basic and more mature algorithm is rule-based planning, where we use "
"a two-layer state machine to manage the path in different scenarios. For "
"details, please refer "
"[scenarios](https://github.com/ApolloAuto/apollo/tree/master/modules/planning/conf/scenario)."
msgstr ""

#: ../../docs/technical_documents/planning_component.md:31
msgid ""
"The learning based algorithms including Hybrid Mode are under "
"exploration, which can be enabled in "
"[planning_config](https://github.com/ApolloAuto/apollo/blob/master/modules/planning/conf/planning_config.pb.txt)."
" The E2E mode outputs a planning trajectory when inputting a birdview "
"image centered by the vehicle pose and current velocity. Note E2E methods"
" are not tested on road, while it's encouraged to do experiments in "
"simulation for research purposes."
msgstr ""

