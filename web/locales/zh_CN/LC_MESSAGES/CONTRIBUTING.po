# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, xinetzone
# This file is distributed under the same license as the Apollo 文档 package.
# xinetzone <735613050@qq.com>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo 文档 \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-23 19:11+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: xinetzone <735613050@qq.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../CONTRIBUTING.md:1
msgid "How to Contribute to Apollo"
msgstr "如何对 Apollo 贡献"

#: ../../CONTRIBUTING.md:3
msgid "Contributor License Agreements"
msgstr "贡献者许可协议"

#: ../../CONTRIBUTING.md:5
msgid ""
"You are welcome to contribute to the Apollo project. To contribute, "
"please agree with the [Apollo individual contributor license agreement] "
"(https://gist.githubusercontent.com/startcode/f5ccf8887bfc7727a0ae05bf0d601e30/raw/029a11300e987e34a29a9d247ac30caa7f6741a7/Apollo_Individual_Contributor_License_Agreement)"
" first."
msgstr ""
"欢迎你为 Apollo 项目作出贡献。"
"要做出贡献，请先同意 [Apollo 个人贡献者许可协议]"
"(https://gist.githubusercontent.com/startcode/f5ccf8887bfc7727a0ae05bf0d601e30/raw/029a11300e987e34a29a9d247ac30caa7f6741a7/Apollo_Individual_Contributor_License_Agreement)"
#: ../../CONTRIBUTING.md:10
msgid "How do I start contributing"
msgstr "如何开始贡献"

#: ../../CONTRIBUTING.md:12
msgid ""
"You can follow the standard [Github "
"approach](https://help.github.com/articles/using-pull-requests/) to "
"contribute code. There is also a detailed how-to guide on _How to Create "
"Pull Request_ in both [English](docs/howto/how_to_create_pull_request.md)"
" and [Chinese](docs/howto/how_to_create_pull_request_cn.md)."
msgstr ""
"你可以按照标准的 [Github 方法](https://help.github.com/articles/using-pull-requests/) "
"来贡献代码。还有一份详细的 _如何创建拉取请求_ 的指南，"
"有 [英文](docs/howto/how_to_create_pull_request.md) 和 "
"[中文](docs/howto/how_to_create_pull_request_cn.md)。"

#: ../../CONTRIBUTING.md:18
#, python-format
msgid ""
"There are [issues with label \"help "
"wanted\"](https://github.com/ApolloAuto/apollo/issues?utf8=%E2%9C%93&q=label%3A%22Type%3A+Help+wanted%22+)"
" that are best to help you get started."
msgstr ""
"有 [带标签 \"help wanted\" 的 issue]"
"(https://github.com/ApolloAuto/apollo/issues?utf8=%E2%9C%93&q=label%3A%22Type%3A+Help+wanted%22+)，"
"是帮助你入门的最佳选择。"

#: ../../CONTRIBUTING.md:21
msgid ""
"If you are currently working on an issue, leave a message to let people "
"know that you are working on it."
msgstr ""
"如果你目前正在处理一个 issue，请留言，让人们知道你正在处理这个问题。"

#: ../../CONTRIBUTING.md:23
msgid ""
"Before sending in your pull request for "
"[review](https://github.com/ApolloAuto/apollo/pulls), make sure your "
"changes follow the guidelines mentioned below, namely: license, testing "
"and coding style guidelines."
msgstr ""
"在发送你的拉动请求给 [审查](https://github.com/ApolloAuto/apollo/pulls) 之前，"
"请确保你的修改遵循下面提到的准则，即：许可、测试和编码风格准则。"

#: ../../CONTRIBUTING.md:28
msgid "License"
msgstr "许可"

#: ../../CONTRIBUTING.md:30
msgid "For each new file, please include a license at the top of the file."
msgstr "对于每一个新文件，请在文件的顶部包括一个许可证。"

#: ../../CONTRIBUTING.md:32
msgid "C++ code License example [util.h](modules/common/util/util.h);"
msgstr "C++ 代码许可示例 [util.h](modules/common/util/util.h)；"

#: ../../CONTRIBUTING.md:34
msgid ""
"Python code License example "
"[process.py](modules/tools/vehicle_calibration/process.py);"
msgstr ""
"Python 代码许可示例 [process.py](modules/tools/vehicle_calibration/process.py)；"

#: ../../CONTRIBUTING.md:37
msgid "Bash code License example [apollo_base.sh](scripts/apollo_base.sh);"
msgstr "Bash 代码许可证示例  [apollo_base.sh](scripts/apollo_base.sh)；"

#: ../../CONTRIBUTING.md:39
msgid "Testing"
msgstr "测试"

#: ../../CONTRIBUTING.md:41
msgid ""
"Please include unit tests for the contributed code to prove that your "
"code works correctly, and make sure that your code does not break "
"existing tests. Test files are always named to end with `_test.cc`, and "
"the test target names in the BUILD file always end with `test`. Here is "
"an example test file [file_test.cc](cyber/common/file_test.cc)."
msgstr ""
"请为贡献的代码包括单元测试，以证明你的代码能正确工作，并确保你的代码不会破坏现有的测试。"
"测试文件总是以 `_test.cc` 命名，BUILD 文件中的测试目标名称总是以 `test` 结尾。"
"下面是一个测试文件的例子 [file_test.cc](cyber/common/file_test.cc)。"

#: ../../CONTRIBUTING.md:47
msgid "You can use command `bash apollo.sh test` to run all unit tests."
msgstr "你可以使用 `bash apollo.sh test` 命令来运行所有单元测试。"

#: ../../CONTRIBUTING.md:49
msgid "Coding style"
msgstr "编码风格"

#: ../../CONTRIBUTING.md:51
msgid ""
"**C/C++ coding style**: Apollo adopted the [Google C++ Style "
"Guide](https://google.github.io/styleguide/cppguide.html). Make sure your"
" code conforms to this style guide. You can use command `bash apollo.sh "
"lint` to check if your code has any style issue."
msgstr ""
"**C/C++ 的编码风格**。Apollo 采用了 [Google C++ 风格指南](https://google.github.io/styleguide/cppguide.html)。"
"请确保你的代码符合这个风格指南。你可以使用命令 `bash apollo.sh lint` 来检查你的代码是否有任何风格问题。"

#: ../../CONTRIBUTING.md:56
msgid ""
"**Python coding style**: Apollo adopted the [Google Python Style "
"Guide](https://google.github.io/styleguide/pyguide.html). You can use the"
" [yapf](https://github.com/google/yapf) command `yapf -i "
"--style='{based_on_style: google}' foo.py` to format a file foo.py."
msgstr ""
"**Python 的编码风格**："
"Apollo 采用了 [Google Python 风格指南](https://google.github.io/styleguide/pyguide.html)。"
"你可以使用 [yapf](https://github.com/google/yapf) 命令 "
"`yapf -i --style='{based_on_style: google}' foo.py` 来格式化一个文件 foo.py。"

#: ../../CONTRIBUTING.md:61
msgid ""
"**Apollo best coding practice**: Please also refer to [Apollo Best Coding"
" Practice](docs/technical_tutorial/apollo_best_coding_practice.md) for "
"more coding practice disciplines."
msgstr ""
"**Apollo 最佳编码实践** ："
"请同时参考 [Apollo 最佳编码实践](docs/technical_tutorial/apollo_best_coding_practice.md)，了解更多的编码实践原则。"

#: ../../CONTRIBUTING.md:65
msgid ""
"**BUILD file coding style** : you can use command `bash apollo.sh format "
"path/to/BUILD/files` to format your BUILD files before you submit."
msgstr ""
"**BUILD 文件的编码方式**："
"你可以使用命令 `bash apollo.sh format path/to/BUILD/files` 来在提交前格式化你的 BUILD 文件。"

#: ../../CONTRIBUTING.md:69
msgid "Documentation"
msgstr "文档"

#: ../../CONTRIBUTING.md:71
msgid ""
"If your code is not straightforward for other contributors to understand,"
" it is recommended to implement the code in a clear and efficient way, "
"and provide sufficient comments and documentation. Apollo uses doxygen to"
" help generate formatted API Document with command `bash apollo.sh doc "
"generate`. To document your code, please follow the guide: [How to "
"document code](docs/howto/how_to_document_code.md)."
msgstr ""
"如果你的代码对其他贡献者来说不是很直接的理解，建议以清晰有效的方式实现代码，并提供足够的注释和文档。"
"Apollo 使用 doxygen 来帮助生成格式化的 API 文档，命令是 `bash apollo.sh doc generate`。"
"要文档化你的代码，请遵循指南：[如何文档化代码](docs/howto/how_to_document_code.md)。"

#: ../../CONTRIBUTING.md:78
msgid "Commit Message"
msgstr "提交信息"

#: ../../CONTRIBUTING.md:80
msgid ""
"The first line of commit message should be a one-line summary of the "
"change. A paragraph can be added following the summary to clearly explain"
" the details of the change. If your code fixed an issue, add the issue "
"number to your commit message. An example of a good commit message is:"
msgstr ""
"提交信息的第一行应该是对修改的单行总结。在摘要后面可以加一段话，以清楚地解释修改的细节。"
"如果你的代码修复了一个 issue，请在你的提交信息中加入 issue 编号。一个好的提交信息的例子是："

#: ../../CONTRIBUTING.md:85
msgid "Control: Replaced algorithm A with algorithm B in modules/control."
msgstr "控制：用 modules/control 中的算法 B 替换了算法 A。"

#: ../../CONTRIBUTING.md:87
msgid ""
"Algorithm B is faster than A because it uses binary search. The runtime "
"is reduced from O(N) to O(log(N))."
msgstr ""
"算法 B 比 A 快，因为它使用二进制搜索。运行时间从 $O(N)$ 减少到 $O(log(N))$。"

#: ../../CONTRIBUTING.md:90
msgid "Fixes #1234"
msgstr "修复 #1234"

#: ../../CONTRIBUTING.md:92
msgid "Before Creating Pull Request"
msgstr "在创建 Pull Request 之前"

#: ../../CONTRIBUTING.md:94
msgid ""
"After you finish your code and are ready to create a Pull Request, please"
" make sure your change don't break build/test/lint by running `bash "
"apollo.sh check`, which is equivalent to a combination of `bash apollo.sh"
" build`, `bash apollo.sh test` and `bash apollo.sh lint`."
msgstr ""
"当你完成你的代码并准备创建一个 Pull Request 时，"
"请通过运行 `bash apollo.sh check` 来确保你的修改不会破坏 build/test/lint，"
"这相当于 `bash apollo.sh build`、`bash apollo.sh test` 和 `bash apollo.sh lint` 的结合。"
