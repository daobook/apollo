# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-26 14:54+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:1
msgid "Planning模块架构和概述"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:3
msgid "数据输入和输出"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:5
msgid "输出数据"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:7
msgid "Planning模块的输出数据类型定义在`planning.proto`，如下图所示："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:9
msgid "![img](images/class_architecture_planning/image001.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:9
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:18
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:20
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:41
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:45
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:51
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:57
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:64
#: ../../../docs/specs/Class_Architecture_Planning_cn.md:68
msgid "img"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:11
msgid "*planning.proto*"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:13
msgid ""
"在proto数据的定义中，输出数据包括总时间、总长度和确切的路径信息，输出数据由控制单元解析执行，输出数据结构定义在`repeated "
"apollo.common.TrajectoryPointtrajectory_point`。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:15
msgid ""
"`trajectory point`类继承自`path_point`类，并新增了speed、acceleration和timing属性。 "
"定义在`pnc_point.proto`中的`trajectory_point`包含了路径的详细属性。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:18
msgid "![img](images/class_architecture_planning/image002.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:20
msgid "![img](images/class_architecture_planning/image003.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:22
msgid "除了路径信息，Planning模块输出了多种注释信息。主要的注释数据包括："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:24
msgid "Estop"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:25
msgid "DecisionResult"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:26
msgid "调试信息"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:28
msgid "`Estop`是标示了错误和异常的指令。例如，当自动驾驶的车辆碰到了障碍物或者无法遵守交通规则时将发送estop信号。`DecisionResult`主要用于展示模拟的输出结果以方便开发者更好的了解Planning模块的计算结果。更多详细的中间值结果会被保存并输出作为调试信息供后续的调试使用。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:30
msgid "输入数据"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:32
msgid "为了计算最终的输出路径，Planning模块需要统一的规划多个输入数据。Planning模块的输入数据包括："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:34
msgid "Routing"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:35
msgid "感知和预测"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:36
msgid "车辆状态和定位"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:37
msgid "高清地图"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:39
msgid "Routing定义了概念性问题“我想去哪儿”，消息定义在`routing.proto`文件中。`RoutingResponse`包含了`RoadSegment`，`RoadSegment`指明了车辆到达目的地应该遵循的路线。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:41
msgid "![img](images/class_architecture_planning/image004.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:43
msgid "关于概念性问题“我周围有什么”的消息定义在`perception_obstacles.proto`和`traffic_light_detection.proto`中。`perception_obstacles.proto`定义了表示车辆周围的障碍物的数据，车辆周围障碍物的数据由感知模块提供。`traffic_light_detection`定义了信号灯状态的数据。除了已被感知的障碍物外，动态障碍物的路径预测对Planning模块也是非常重要的数据，因此`prediction.proto`封装了`perception_obstacle`消息来表示预测路径。请参考下述图片："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:45
msgid "![img](images/class_architecture_planning/image005.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:47
msgid "每个预测的路径都有其单独的可能性，而且每个动态障碍物可能有多个预测路径。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:49
msgid "除了概念性问题“我想去哪儿”和“我周围有什么”，另外一个重要的概念性问题是“我在哪”。关于该问题的数据通过高清地图和定位模块获得。定位信息和车辆车架信息被封装在`VehicleState`消息中，该消息定义在`vehicle_state.proto`，参考下述图片："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:51
msgid "![img](images/class_architecture_planning/image009.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:53
msgid "代码结构和类层次"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:55
msgid "代码组织方式如下图所示：Planning模块的入口是`planning.cc`。在Planning模块内部，重要的类在下图中展示。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:57
msgid "![img](images/class_architecture_planning/image006.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:59
msgid ""
"`ReferenceLineInfo`对`ReferenceLine`类进行了封装，为Planning模块提供了平滑的指令执行序列。 "
"**Frame**包含了所有的数据依赖关系，例如包含了预测路径信息的障碍物，自动驾驶车辆的状态等。 **HD-"
"Ma**p在Planning模块内作为封装了多个数据的库使用，提供不同特点的地图数据查询需求。 **EM "
"Planne**r执行具体的Planning任务，继承自**Planner**类。Apollo2.0中的**EM "
"Planner**类和之前发布的**RTK Planner**类都继承自Planner类。"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:64
msgid "![img](images/class_architecture_planning/image007.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:66
msgid ""
"例如，在EM "
"Planner执行的一次planning循环的内部，采用迭代执行的方法，tasks的三个类别交替执行。“**决策/优化**”类的关系在下述图片中展示："
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:68
msgid "![img](images/class_architecture_planning/image008.png)"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:70
msgid "**Deciders** 包括 traffic decider, path decider and speed decider."
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:72
msgid "**Path Optimizers** 为DP/QP path optimizers."
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md:74
msgid "**Speed Optimizers** 为DP/QP speed optimizers."
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md
msgid "**附注：**"
msgstr ""

#: ../../../docs/specs/Class_Architecture_Planning_cn.md
msgid ""
"DP表示动态规划（dynamic programming），QP表示二次规划（quadratic "
"programming）。经过计算步骤后，最终的路径数据经过处理后传递到下一个节点模块进行路径的执行。"
msgstr ""

