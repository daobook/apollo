# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Apollo Auto
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Apollo Auto \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-26 14:54+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:1
msgid "Apollo车辆适配教程"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:2
msgid "引言"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:3
msgid ""
"本文所介绍的Apollo新车适配方法，可以帮助开发者快速接入新车辆，以方便开发者在Apollo上进行软件开发。文中所介绍的车辆线控信号标准和要求均源自Apollo开放车辆认证平台，目前车辆认证平台已经有Lincoln，Lexus，GE3，WEY等车型，有意愿把车加入Apollo车辆认证平台的车企、车辆提供商，可以按照文档内对线控的具体要求，熟悉和准备车辆底层控制协议，节省前期准备时间，欢迎有兴趣的开发者移步至[Apollo开放车辆认证平台](http://apollo.auto/vehicle/certificate_cn.html)(http://apollo.auto/vehicle/certificate_cn.html)"
"  了解更多详细内容。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:5
msgid "适配一辆符合Apollo标准的车辆"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:7
msgid "本文主要介绍如何在Apollo内添加一辆符合Apollo标准的新车，方便开发者设计符合Apollo线控要求的底盘系统，开发适配Apollo软件的底盘适配代码，构建快速接入Apollo软件的能力。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:8
msgid "开发者在适配一辆新车的CAN通信时，首先需要设计完成符合Apollo线控要求的底盘通信协议，这一部分就是根据Apollo线控列表构建一个车辆底盘信号的DBC文件，设计底盘相关接口定义、报文和信号与DBC一一对应。在完成了DBC文件设计后，根据Apollo提供的DBC转化代码工具，得到初版的canbus底层适配代码，然后添加相关车辆的控制逻辑，在Apollo搭建车辆底层chassis信号及控制车辆信号。最后通过canbus调试工具进行信号调试和验证，确保车辆的底盘信号与Apollo上层通信完全无问题。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:10
msgid "一、符合Apollo线控标准的车辆"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:12
msgid "车辆DBC"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:13
msgid ""
"开发一台搭载Apollo系统的车辆，首先的工作就是建立Apollo与车辆底层之间的通信，整车是通过CAN总线(CAN bus, "
"Controller Area Network)进行各个控制器(ECU, electronic control "
"units)之间的通信，因此Apollo控制系统在接入车辆系统时，也通过CAN总线通信方式对车辆进行控制。车辆需要开放一部分底盘信号，将这些信号配置成符合Apollo的线控标准要求的DBC文件(Database"
" file, "
"是一中用于描述CAN总线上数据的专用文件，能够方便用户快速构建车辆CAN通信的网络结构，定义CAN总线上的信号、报文等相关信息)。这里推荐开发者使用canoe软件的CANdb++编辑生成的文件，Apollo软件处理底盘DBC文件生成底盘适配代码模板，开发者通过简单的编程开发，即可将车辆开放的底盘信号适配至Apollo的软件中，实现Apollo与车辆底盘间的通信。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:15
msgid "DBC线控标准详解"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:16
msgid ""
"开发者在开发车辆底盘控制信号时，需要参照Apollo官网车辆认证平台（http://apollo.auto/docs/procedure_cn.html）"
"  发布的车辆线控标准， 乘用车标准：http://apollo-"
"homepage.bj.bcebos.com/Apollo_by_wire_requirement.xlsx ； "
"微型车标准：https://apollohomepage.bj.bcebos.com/Apollo_by_wire_requirement_micro_car.xlsx"
" "
"车辆线控标准规定了车辆底盘信号的需求，也规定了每一帧控制信号在底盘的响应时间要求。车辆底盘信号不仅需要在功能上符合要求，也需要在性能上符合控制要求，这样才能满足符合Apollo线控标准的车辆控制底盘。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:20
msgid "开发者在改造车辆底盘为线控底盘时，要参考车辆线控标准满足控制的性能要求，如转向信号要求响应时间在100ms内，最大超调量满足满足具体要求等。请开发者仔细阅读线控列表内的性能要求，在Apollo车辆认证时，也会对底盘的性能进行相应测试。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:22
msgid ""
"在实际开发DBC的过程中，每个信号定义的细节也有具体的要求，这样做为了节省开发者时间，同时提高车辆认证的效率，需要开发者对每个信号要重点理解和注意。下面是Apollo对车辆底盘信号的需求如下表所示："
" "
"![apollo_by_wire_requirement1](images/vehicle_adaption_tutorial/apollo_by_wire_requirement1.png)"
" "
"![apollo_by_wire_requirement2](images/vehicle_adaption_tutorial/apollo_by_wire_requirement2.png)"
" "
"![apollo_by_wire_requirement3](images/vehicle_adaption_tutorial/apollo_by_wire_requirement3.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:22
msgid "apollo_by_wire_requirement1"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:22
msgid "apollo_by_wire_requirement2"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:22
msgid "apollo_by_wire_requirement3"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:27
msgid "车辆的底盘控制是Apollo与底盘通信的基础，每一个控制信号都需要可靠和准确。人工接管和越界处理是保证在测试和使用时随时接管，确保突发情况发生时的行车安全。除了线控列表内对信号的详细要求外，**开发者还需要格外注意横向和纵向使能信号的独立**，**底盘接管逻辑等特殊要求**，下面对信号的功能特殊要求做详细说明。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:29
msgid "线控转向"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:30
msgid "转向使能信号"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:32
msgid "（1）转向使能信号是控制车辆进入或退出转向自动驾驶模式，该使能信号必须是通过**上升沿触发**方式的信号，使能信号原则上是1个信号；有些开发者若有不同信号同时控制，才能使能转向进入自动驾驶状态，需要开发者在底层自己集成相关使能信号的逻辑控制，给Apollo使能信号原则上必须只有1个。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:34
msgid "（2）转向自动驾驶模式必须独立，使能信号必须独立，不与纵向的其他模块（如驱动、制动、档位、驻车等）使能信号相关联，需要满足：单独使能进入转向自动驾驶模式，纵向所处驾驶模式不发生变化，下发方向盘转角或转速控制信号，车辆能够响应相应的转角和转速；单独使能退出转向自动驾驶模式，纵向所处驾驶模式不发生变化，下发方向盘转角或转速控制信号，车辆不响应；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:36
msgid "（3）如果横向被接管，再次进入自动驾驶模式时，需要通过上升沿触发信号进入自动驾驶。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:38
msgid "转向控制信号"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:40
msgid "目标方向盘转角：控制方向盘转角的信号，单位是度（deg），控制方向盘（逆时针）左转为正值，控制方向盘（顺时针）右转为负值。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:42
msgid "目标方向盘转速：多数车辆无法开放次控制信号接口，建议将方向盘转速设置为最大值，提高系统响应时间。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:44
msgid "转向反馈信号"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:46
msgid "方向盘实际转角反馈：反馈方向盘实际转角，要求反馈准确，左转反馈为正值，右转反馈为负值。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:48
msgid "转向驾驶模式反馈：反馈车辆当前所处的转向驾驶模式，至少需要3种模式：自动驾驶模式，手动驾驶模式，被人工接管模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:50
msgid "故障信息反馈：反馈转向控制系统是否存在故障。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:52
msgid "人工接管处理"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:54
msgid "（1）对于乘用车/商用车，当人为施加的方向盘扭矩大于其接管门限时，车辆各个模块均退出自动驾驶，此时转向驾驶模式反馈被接管；对于底盘小车等，当小车底盘接收到遥控器控制车辆转向的指令时，车辆各个模块均退出自动驾驶；转向接管需要独立，此时转向驾驶模式反馈被人工接管模式，驱动驾驶模式、制动驾驶模式此时应反馈手动驾驶模式；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:56
msgid "（2）当转向自动驾驶被人工接管时，所有模块都退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:58
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:104
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:144
msgid "越界处理"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:60
msgid ""
"越界处理的原则是越界拒绝执行，并退出自动驾驶模式。 "
"当Apollo下发控制指令超过原控制指令的定义范围时，此时称为越界。发生越界时，转向需要退出自动驾驶模式。 "
"如定义目标方向盘转角最大范围为-500deg~500deg，若Apollo下发的转角指令不在此范围时，底盘需要对此越界拒绝执行，并退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:64
msgid "线控驱动"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:66
msgid "驱动使能："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:68
msgid "（1）驱动使能信号是控制车辆进入或退出驱动自动驾驶模式，该使能信号必须是通过**上升沿触发**方式的信号，**使能信号原则上是1个信号**；有些开发者若有不同信号同时控制，才能使能转向进入自动驾驶状态，需要开发者在底层自己集成相关使能信号的逻辑控制，给Apollo使能信号原则上必须只有1个。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:70
msgid "（2）驱动使能信号必须独立，不与转向模块使能信号相关联，需要满足：单独使能进入纵向自动驾驶模式，转向所处驾驶模式不发生变化，下发驱动控制信号，车辆能够响应相应的控制命令；单独使能退出驱动自动驾驶模式，转向所处驾驶模式不发生变化，下发驱动控制信号，车辆不响应；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:72
msgid "（3）**原则上驱动使能信号与制动、档位、驻车使能相互独立根据以往的实际经验**，有些车辆在纵向驱动和制动使能信号归为一个信号，这样的特殊情况需要开发者额外注意，确保纵向的使能一定要与横向使能分开并独立，纵向各模块如果相互关联，则使能需要驱动、制动、档位、驻车一同进去自动驾驶模式，不使能一同退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:74
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:118
msgid "（4）如果横向被接管，再次进入自动驾驶模式时，需要通过上升沿触发信号进入自动驾驶。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:76
msgid "驱动控制信号："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:78
msgid "目标加速踏板位置：控制量是加速踏板的位置百分比，范围是0~100%，100%代表加速踏板踩到最大位置。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:80
msgid "车辆目标纵向加速度和车辆目标驱动扭矩是车辆控制信号可选项。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:82
msgid "驱动反馈信号："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:84
msgid "驾驶模式：反馈车辆当前所处的驱动驾驶模式，至少需要3种模式：自动驾驶模式，手动驾驶模式，被人工接管模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:86
msgid "加速踏板位置：需准确反馈当前车辆实际踏板位置。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:88
msgid "纵向加速度：需准确反馈当前车辆的纵向加速度。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:90
msgid "车速：需准确反馈当前车辆车速，Apollo需求的车速是m/s，**一般车辆反馈的车速单位是km/h，此时需要在DBC转换为适配代码后单独进行单位转化**。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:92
msgid ""
"轮速：对于乘用车，需提供相关轮速信号，轮速大小，单位km/h。如果有条件，可提供车轮运动方向反馈，Value "
"Description按照以下顺序`0x00，FORWARD；0x01，BACKWARD；0x02，STANDSTILL；0x03，INVALID`。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:94
msgid "发动机/电机转速：需准确反馈当前发动机或电机转速，单位r/min。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:96
msgid "故障信息：反馈驱动系统是否存在故障。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:98
msgid "人工接管："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:100
msgid "（1）当车辆底盘接收到人工干预的加速踏板指令（或对于底盘小车，接收到遥控器下发的加速信号）时，车辆各个模块均退出自动驾驶。转向接管需要独立，此时驱动驾驶模式反馈被人工接管模式，转向驾驶模式、制动驾驶模式此时应反馈手动驾驶模式；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:102
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:142
msgid "（2）驱动自动驾驶被人工接管时，所有模块都退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:106
msgid "发生越界时，转向需要退出自动驾驶模式。如定义目标加速踏板位置范围为0~100%，若Apollo下发的控制踏板指令不在此范围时，底盘需要对此越界拒绝执行，并退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:108
msgid "线控制动"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:110
msgid "制动使能："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:112
msgid "（1）制动使能信号是控制车辆进入或退出驱动自动驾驶模式，该使能信号必须是通过**上升沿触发**方式的信号，使能信号原则上是1个信号；有些开发者若有不同信号同时控制，才能使能转向进入自动驾驶状态，需要开发者在底层自己集成相关使能信号的逻辑控制，给Apollo使能信号原则上必须只有1个。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:114
msgid "（2）制动使能信号必须独立，不能与转向模块使能信号相关联，需要满足：单独使能进入纵向自动驾驶模式，转向所处驾驶模式不发生变化，下发制动控制信号，车辆能够响应相应的控制命令；单独使能退出驱动自动驾驶模式，转向所处驾驶模式不发生变化，下发制动控制信号，车辆不响应；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:116
msgid "（3）原则上驱动使能信号与驱动、档位、驻车使能相互独立。根据以往的实际经验，有些车辆在纵向驱动和制动使能信号归为一个信号，这样的特殊情况需要开发者额外注意，确保纵向的使能一定要与横向使能分开并独立，纵向各模块如果相互关联，则使能需要驱动、制动、档位、驻车一同进去自动驾驶模式，不使能一同退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:120
msgid "制动控制信号"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:122
msgid "制动踏板目标位置：控制量是加速踏板的位置百分比，范围是0~100%，100%代表制动踏板踩到最大位置。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:124
msgid "目标减速度：可选项，控制量是车辆的目标减速度大小。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:126
msgid "制动灯控制：可选项，控制制动灯是否点亮，一般车辆的底盘会在制动时默认点亮制动灯。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:128
msgid "制动反馈信号"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:130
msgid "驾驶模式：反馈车辆当前所处的制动驾驶模式，至少需要3种模式：自动驾驶模式，手动驾驶模式，被人工接管模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:132
msgid "制动踏板位置：制动踏板位置，百分比。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:134
msgid "刹车灯状态：反馈刹车灯是否点亮。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:136
msgid "故障信息：反馈制动系统是否有故障。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:138
msgid "人工接管"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:140
msgid "（1）当车辆底盘接收到人工干预的制动踏板指令（或对于底盘小车，接收到遥控器下发的减速信号）时，车辆各个模块均退出自动驾驶。转向接管需要独立，此时驱动驾驶模式反馈被人工接管模式，转向驾驶模式、制动驾驶模式此时应反馈手动驾驶模式；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:146
msgid "发生越界时，转向需要退出自动驾驶模式。如定义目标制动踏板位置范围为0~100%，若Apollo下发的控制踏板指令不在此范围时，底盘需要对此越界拒绝执行，并使所有模式退出自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:148
msgid "线控档位"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:150
msgid "档位使能"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:152
msgid "使能独立，不与横向控制相关联。可以与纵向使能信号关联，也可独立使能。档位使能信号必须是通过上升沿触发方式的信号，使能信号原则上是1个信号。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:154
msgid "档位控制"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:156
msgid "控制档位信号，档位信号必须按照以下顺序：`0x00：N档；0x01：D；0x02：R；0x03：P；0x04：NONE`。多余的不必再增加。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:158
msgid "档位反馈"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:160
msgid "档位信息：反馈当前档位信号，反馈顺序与控制档位信号顺序一致：`0x00：N档；0x01：D；0x02：R；0x03：P；0x04：NONE`。多余的不必再增加。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:162
msgid "故障信息：反馈换挡系统是否存在故障。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:164
msgid "线控驻车"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:166
msgid "驻车使能"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:168
msgid "使能独立，不与横向控制相关联。可以与纵向使能信号关联，也可独立使能。驻车使能信号必须是通过上升沿触发方式的信号，使能信号原则上是1个信号。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:170
msgid "驻车控制"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:172
msgid "驻车信号有效，电子手刹抱死，车辆驻车；驻车信号无效，电子手刹松开，车辆不驻车。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:174
msgid "驻车反馈"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:176
msgid "EPB开关状态：反馈当前电子手刹是否抱死或松开。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:178
msgid "驻车状态反馈：反馈当前驻车是自动驾驶模式还是手动控制模式。至少需要2种模式：`自动驾驶模式`，`手动驾驶模式`，`被人工接管模式`。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:180
msgid "驻车系统故障反馈：反馈驻车系统故障。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:182
msgid "其他车身功能"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:184
msgid "包括线控灯光，主要控制远、近光灯、转向灯、危险警报灯的打开和关闭，已经相应的状态反馈信号。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:186
msgid "还有雨刮和喇叭控制，作为可选项。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:188
msgid "车辆VIN码"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:190
msgid "VIN码一般17位，按照ASCII码格式，每一个ASCII占1字节，需要3帧报文连续发出，但是VIN码不需要实时更新，所以在系统请求进入自动驾驶时，VIN码通过CAN总线发出，并一直保持该值不再更新，也可减少总线的负载。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:192
msgid "DBC文件要求"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:194
msgid "熟悉了上述Apollo对车辆底盘信号的要求，第二步是进行车辆底盘信号database（DBC）文件进行编辑，设置通信的网络结构，每个信号的初值、符号类型，精度，大小范围，取值等，进而组合成相应的CAN通信报文（message）与Apollo进行通信。下面使用CANdb++软件对DBC文件进行编辑，有较好的可视化界面，该软件目前只适用于Windows系统。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:196
msgid "因为DBC文件后面会根据Apollo的转译脚本工具，将底盘定义的报文（message）、信号（signal）转化为C++程序代码，因此在编辑DBC时，对信号的名称定义、注释、赋值等就要符合C++语言定义规范，这样以确保在后期调试时不会因为DBC文件的问题无法调通CANBUS通信。根据Apollo代码要求，我们总结了以下注意事项："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:197
msgid "1. 控制信号名称建议为 ACU"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:198
msgid "在定义网络上ECU名称时，建议定义Apollo端的控制器名称为ACU（Apollo Control Unit）。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:200
msgid "![name](images/vehicle_adaption_tutorial/name.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:200
msgid "name"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:201
msgid "2. CAN信号ID建议不大于2048"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:202
msgid "目前乘用车CAN通信建议采用标准帧格式（CAN Standard 2.0），Apollo可支持扩展帧。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:204
msgid "![ID](images/vehicle_adaption_tutorial/messageID_define.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:204
msgid "ID"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:205
msgid "3. 注释不能有回车符和换行符，comment（注释）必须为英文"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:206
msgid "每帧报文（message）如果有注释，注释内不要有换行，不能写中文，必须为英文格式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:208
msgid "![comment](images/vehicle_adaption_tutorial/comment.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:208
msgid "comment"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:209
msgid "4. VAL_（枚举值）（Value Description）需要使用英文，且不能有相同定义名称，必须为字母或字母和数字组合，不能有符号。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:210
msgid ""
"对于大部分状态反馈信号和控制信号，如档位反馈，驾驶模式反馈等，需要对信号进行定义，在信号定义的Value "
"Description项内进行定义，定义的名称要遵循C++命名规范，要求使用英文，且不能有相同定义名称，必须为字母或字母和数字组合，不能有符号。如下图是的档位反馈信号的Value"
" Description定义。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:212
msgid "![gear1](images/vehicle_adaption_tutorial/gear1.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:212
msgid "gear1"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:213
msgid ""
"5. 反馈信号和控制信号中如车速，轮速，加速度，踏板位置（百分比）等double类型的反馈和控制信号在DBC中Value "
"Description项中必须为空。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:214
msgid ""
"对于实时数值反馈信号和数值控制信号，如车速（实际车速）、轮速反馈（实际轮速），踏板控制（百分比），转角控制（实际转角值）等，此类信号在定义Value"
" Description项中不能加任何内容。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:216
msgid "![val](images/vehicle_adaption_tutorial/val.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:216
msgid "val"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:217
msgid "6. 转向信号的范围，在定义时要填写准确的取值范围，注意控制转角的精度一般不高于0.05deg，踏板百分比精度（factor）不高于0.1。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:218
msgid "对于所有报文的Byte Order，一个DBC内的信号只能统一定义，全部是Motorola格式或者全部是Intel格式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:220
msgid "![define](images/vehicle_adaption_tutorial/define.jpg)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:220
msgid "define"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:223
msgid "二、适配CANBUS代码"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:224
msgid "1. DBC文件转换成canbus模板代码"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:225
msgid "Canbus适配代码可以使用apollo的工具生成，在转换代码前，要保证DBC按照上述的DBC文件要求完成，并通过gedit打开dbc文件，另存转码为UTF-8格式保存。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:227
msgid "（1）将DBC文件放置指定目录下，目录`apollo/modules/tools/gen_vehicle_protocol`内。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:229
msgid "（2）修改DBC转换脚本的配置文件：下面以GE3车型添加为例，在`apollo/modules/tools/gen_vehicle_protocol`目录下，复制默认存在的`mkz_conf.yml`文件并重命名为`ge3_conf.yml`，修改该配置文件，如下图所示："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:231
msgid "![yml](images/vehicle_adaption_tutorial/yml.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:231
msgid "yml"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:233
msgid "`dbc_file`：填写对应你的DBC文件名称，DBC文件名称一般以车型名称命名，并以`.dbc`结束；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:235
msgid "`protocol_conf`：与上述DBC文件名称命名相同，填写`ge3.yml`；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:237
msgid "`car_type`：填入车型名称；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:239
msgid "`sender_list：[ ] `：发送列表，这里默认为空；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:241
msgid "`sender`：此处修改为与DBC内定义的Apollo的名称一致，ge3的DBC内定义Apollo名称为SCU。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:243
msgid "（3）完成`ge3_conf.yml`配置文件设置，启动docker，进入Apollo的容器后，在`apollo/modules/tools/gen_vehicle_protocol`目录下，找到DBC转化工具`gen.py`，执行代码："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:248
msgid ""
"执行完成上述脚本后，在终端内会显示生成了控制协议5个，反馈协议11个。 "
"![creat_ge3protocol](images/vehicle_adaption_tutorial/creat_ge3protocol.png)"
" "
"这时在`apollo/modules/tools/gen_vehicle_protocol`目录下，会生成一个`output`文件夹，文件夹内有2个文件夹，一个是`proto`文件夹，一个是`vehicle`文件夹；这两个文件内的代码内容就是我们要适配canbus的基本代码模板了。我们需要把文件内的代码**拷贝**到apollo的canbus层内，进行代码适配添加。"
" ![output](images/vehicle_adaption_tutorial/output.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:248
msgid "creat_ge3protocol"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:248
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:258
msgid "output"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:253
msgid "**注意**：把这个output文件夹内生成的代码模板拷贝至相应的apollo目录后，要删除该文件夹，如果不删除该文件夹，后期编译apollo时会报错。该文件夹有保护权限，请在apollo的docker内执行删除代码："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:257
msgid "2. 适配代码合入apollo文件内"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:258
msgid ""
"下面以添加ge3车型为例，将该代码添加至apollo内： "
"![output](images/vehicle_adaption_tutorial/output.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:261
msgid ""
"（1）将`apollo/modules/tools/gen_vehicle_protocol/output/proto` "
"文件夹内`ge3.proto`文件拷贝至`apollo/modules/canbus/proto` "
"文件夹内，并在该文件夹内修改chassis_detail.proto，在该文件头部添加头文件`import "
"\"modules/canbus/proto/ge3.proto\"` "
"![importproto](images/vehicle_adaption_tutorial/importproto.png) "
"在`message ChassisDetail{}` 结构体内的最后一行添加要增加的新车型变量定义： `Ge3 ge3 = 21`； "
"![ge3_chassis_detail](images/vehicle_adaption_tutorial/ge3_chassis_detail.png)"
"  "
"在`pollo/modules/canbus/proto`目录的`BUILD`文件内添加上述新`proto`的依赖：`\"ge3.proto\"`；"
" ![BUILD_depend](images/vehicle_adaption_tutorial/proto_BUILD_depend.png)"
" （2）将`apollo/modules/tools/gen_vehicle_protocol/output/vehicle/` "
"内的ge3文件夹拷贝至`apollo/modules/canbus/vehicle/` 文件夹下； "
"![copy_ge3](images/vehicle_adaption_tutorial/copy_ge3.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:261
msgid "importproto"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:261
msgid "ge3_chassis_detail"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:261
msgid "BUILD_depend"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:261
msgid "copy_ge3"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:269
msgid "3.实现新的车辆控制逻辑"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:270
msgid ""
"实现新的车辆控制逻辑，在`apollo/modules/canbus/vehicle/ge3/ge3_controller.cc` "
"文件编写控制逻辑代码，主要包含将解析的底盘反馈报文的信息，通过`chassis`和`chassis_detail`广播出车辆底盘信息。`chassis`主要包括获取底盘的车速、轮速、发动机转速、踏板反馈、转角反馈等信息，"
" `chassis_detail`是每一帧报文的实际信息，这一部分编写的代码如下所示："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:505
msgid "设置自动驾驶模式，编辑相关使能逻辑，在Apollo中，车辆的驾驶模式主要包含："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:507
msgid "完全自动驾驶模式（`COMPLETE_AUTO_DRIVE`）：横向、纵向都使能；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:509
msgid "横向自动驾驶模式（`AUTO_STEER_ONLY`）：横向使能，纵向不使能；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:511
msgid "纵向自动驾驶模式（`AUTO_SPEED_ONLY`）：横向不使能，纵向使能；"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:513
msgid "车辆使能控制信号控制逻辑如下所示："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:605
msgid "添加控制信号的相关功能，必须要添加的控制信号包括车辆的油门、刹车踏板控制，转向控制，和档位控制；其它控制信号包括车大灯控制、喇叭控制、转向灯控制、电子手刹控制。代码如下所示："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:768
msgid ""
"添加`CheckResponse`逻辑，Apollo程序内增加了对车辆底层是否在自动驾驶模式的监控，即车辆横向、驱动、制动模块的驾驶模式反馈是否处于自动驾驶状态，如果在一个`CheckResponse`周期内，车辆某个模块驾驶模块反馈处于接管或者手动驾驶模式，则Apollo会控制车辆使能为紧急停车模式（`Emergency`），即各模块均控制为手动模式，确保控制车辆时的安全。不同的车辆`CheckResponse`周期可能不同，需要开发者根据情况通过设置`retry_num`设定`check`周期。"
" 开发者可以不改原check代码方案，将3个驾驶模式反馈报文与apollo内`chassis_detail`做映射："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:771
msgid "`is_eps_online->转向模式反馈信号`"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:773
msgid "`is_vcu_online->驱动模式反馈信号`"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:775
msgid "`is_esp_online->制动模式反馈信号`"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:777
msgid "在`apollo/modules/canbus/vehicle/ge3/protocol/scu_eps_311.cc`文件内，增加以下代码："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:781
msgid "在`apollo/modules/canbus/vehicle/ge3/protocol/scu_vcu_1_312.cc`文件内，增加以下代码："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:785
msgid "在`apollo/modules/canbus/vehicle/ge3/protocol/scu_bcs_1_306.cc`文件内，增加以下代码："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:789
msgid "`CheckResponse`实现代码如下："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:837
msgid "4.修改底盘车速反馈协议，将车速反馈单位由km/h转化为m/s"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:838
msgid ""
"Apollo系统内默认使用车速反馈量为`m/s`，底盘车速信息对Apollo非常重要，在车辆标定、控制、规划等都需要采集该数据，所以开发者要在开发适配代码时，重点检查车速反馈的单位。车速由`km/h`转化为`m/s`时，在反馈车速的信号除以`3.6`即可。"
" "
"找到Ge3车辆反馈车速的报文在文件`apollo/modules/canbus/vehicle/ge3/protocol/scu_bcs_2_307.cc`"
" 下，反馈车速消息为`Scubcs2307::bcs_vehspd{}`，如下图所示： "
"![speed_transfer](images/vehicle_adaption_tutorial/speed_transfer.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:838
msgid "speed_transfer"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:842
msgid "5.注册新车辆"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:843
msgid ""
"在`modules/canbus/vehicle/vehicle_factory.cc`里注册新的车辆，在该文件内新建如下类： "
"![register_ge3](images/vehicle_adaption_tutorial/register_ge3.png) 添加头文件 "
"![add_head_file](images/vehicle_adaption_tutorial/add_head_file.png) "
"添加BUILD依赖库 在`apollo/modules/canbus/vehicle/BUILD` "
"文件内添加`ge3_vehicle_factory`依赖库。 "
"![add_build_depend](images/vehicle_adaption_tutorial/add_build_depend.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:843
msgid "register_ge3"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:843
msgid "add_head_file"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:843
msgid "add_build_depend"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:851
msgid "6.更新配置文件"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:852
msgid ""
"在`modules/canbus/proto/vehicle_parameter.proto` 文件内添加GE3车辆分支。 "
"![register1_ge3](images/vehicle_adaption_tutorial/register1_ge3.png) "
"在`modules/canbus/conf/canbus_conf.pb.txt` 更新配置，改为ge3的canbus通信程序。 "
"![register2_ge3](images/vehicle_adaption_tutorial/register2_ge3.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:852
msgid "register1_ge3"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:852
msgid "register2_ge3"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:857
msgid "三、车辆底盘开环验证DBC的方法"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:858
msgid "1、开环测试"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:859
msgid "在确定了车辆底盘DBC后，对DBC内定义的信号进行开环测试。开环测试的主要目的是测试车辆线控信号与车辆的实际功能是否相符，测试车辆的转向、加减速性能响应是否满足车辆的线控需求，测试车辆接管逻辑是否满足要求。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:861
msgid "底盘的开环单侧中，开发者要针对前文所述的DBC重点要求进行测试，如车辆横纵向使能独立性，横纵向接管的独立性，每个控制信号是否满足控制要求和控制边界，反馈信号是否反馈正确。在性能上，控制信号的转向和加减速延迟是否满足apollo控制性能要求，超调误差是否在线控列表范围内。请开发者根据线控列表内的性能要求，对控制信号进行测试。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:863
msgid "2、teleop底盘联调测试"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:864
msgid "底盘联调测试就是通过将Apollo与车辆进行canbus通信后，测试Apollo下发控制信号（如加速/减速/转向/使能等）是否能够准确控制车辆，测试车辆的底盘反馈信号（如当前踏板百分比反馈/当前转角反馈/使能反馈/接管反馈等）是否与反馈了车辆的实际状态，验证Apollo下发的控制指令，车辆底盘能够准确执行。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:866
msgid "teleop测试工具介绍"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:867
msgid "apollo里为开发者提供了一个teleop的测试工具，在`apollo/modules/canbus/tools/teleop.cc`，在term内输入"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:871
msgid "即可进入teleop界面，如下图所示："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:873
msgid "![teleop](images/vehicle_adaption_tutorial/teleop.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:873
msgid "teleop"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:875
msgid "按`h`键，可以调出上图所示的帮助界面，可以查询Teleop工具的使用方法，下面简单对teleop各个控制指令介绍下。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:876
msgid "Set Action 执行Apollo对车辆的使能控制："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:877
msgid "按`m`和`0`键组合，表示执行reset指令，车辆退出自动驾驶模式； 按`m`和`1`键组合，表示执行start指令，车辆进入自动驾驶模式。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:879
msgid "Set Gear 表示设置档位，按`g`和`数字`组合，进行相应档位设置："
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:880
msgid ""
"按`g`+`0`挂入N档（空挡）； 按`g`+`1`挂入D档（前进挡）； 按`g`+`2`挂入R档（倒车档）； "
"按`g`+`3`挂入P档（驻车档）； 其它档位控制指令暂不需要，根据我们DBC要求，一般车辆控制档位指令就这几个。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:885
msgid "Throttle/Speed up  表示每次增加油门踏板量2%，车辆加速"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:886
msgid ""
"按 `w` 键增加油门踏板2%，使车辆加速。如果当前已经执行brake刹车指令，按`w`表示减少刹车踏板量2%。 "
"油门踏板量的控制范围是0~100%，即100%时相当于油门踏板全部踩下。默认每按`w`键一次，油门踏板量增加2%，这个值开发者可以根据实车测试，进行修改，根据经验，每次变化2%比较合适。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:889
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:897
msgid "`注意：请先用teleop执行挂D档后再执行加油命令，请在开放场地测试，注意安全`！"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:890
msgid "Set  Throttle 设置油门踏板百分比"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:891
msgid "按`t`+`数字`可以直接设置具体的油门踏板百分比，油门踏板可设置的百分比数为0~100。如执行t20，表示直接设置当前油门踏板量为20%，并将刹车踏板百分比置为0，这一点与实际开车逻辑一致，如果踩下油门踏板，就不能踩刹车踏板。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:893
#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:901
msgid "`注意：直接设置油门踏板百分比时，注意每次不要设置太大，开放场地测试，注意安全！请在车辆为D档状态下执行该命令`。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:894
msgid "Brake/Speed down 表示每次增加油门踏板量2%，车辆加速"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:895
msgid "按`s`键增加刹车踏板百分比，使车辆减速。如当前已经执行throttle加速指令，按`s`键表示减少油门踏板百分比。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:898
msgid "Set Brake 设置刹车踏板百分比"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:899
msgid "按`b`+`数字`可以直接设置具体的刹车踏板百分比，刹车踏板可设置的百分比数为0~100。如执行b20，表示直接设置当前刹车踏板量为20%，并将油门踏板百分比置为0，这一点与实际开车逻辑一致，如果踩下刹车踏板，就不能踩油门踏板。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:902
msgid "Steer LEFT 表示方向盘每次向左转2%"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:903
msgid ""
"按`a`键表示每次向左转2%的方向盘最大转角，具体转动角度应根据车辆设置的最大方向盘转角乘以2%进行换算。 "
"该指令执行可以在车辆静止时执行，也可以在车辆启动后执行。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:905
msgid "Steer RIGHT表示方向盘每次向右转2%"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:906
msgid ""
"按`s`键表示每次向右转2%的方向盘最大转角，具体转动角度应根据车辆设置的最大方向盘转角乘以2%进行换算。 "
"该指令执行可以在车辆静止时执行，也可以在车辆启动后执行。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:908
msgid "Parking Brake 打开电子手刹"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:909
msgid "按`P`键（注意是大写P）可以手动控制车辆电子手刹开关。这个功能根据车辆的是否提供了电子手刹的控制接口而实现。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:911
msgid "`注意：执行电子手刹开启或释放时，请将车辆用teleop设置为P档状态`。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:912
msgid "Emergency Stop 紧急停车"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:913
msgid ""
"按`E`键（注意是大写E）可以进行车辆紧急停车，默认执行50%刹车。 "
"建议开发者在测试时尽量少用此功能，体感差，调试车辆时多注意周围情况。发生突发情况时及时用外接踩刹车踏板的方式进行手动接管车辆。"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:916
msgid "诊断工具介绍"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:917
msgid ""
"了解了teleop的基本操作后，开发者根据相应的指令，对车辆执行具体的控制命令，然后通过Apollo的可视化监控工具`diagnostic.sh（Apollo3.0及以前版本）/cyber_monitor`"
" 进行查看车辆当前的反馈信号，确认控制下发后车辆的执行结果是否正确。 "
"在Apollo里提供了一个可视化的监控工具，可以用来监控底盘`chassis`和`chassis_detail`信息，通过执行"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:923
msgid ""
"在`apollo/modules/canbus/conf/canbus.conf`文件内： "
"修改配置`--noenable_chassis_detail_pub`为`--enable_chassis_detail_pub`，表示在打开`chassis_detail`底盘详细信息，即可以查看底盘反馈信号的每一帧报文原始信息。"
" "
"修改配置`--receive_guardian`为`--noreceive_guardian`，即可以关闭guardian模式，进入canbus的调试模式，这样teleop时就能够控制车辆了。如下图所示是修改`canbus_conf`配置文件。"
" ![canbus_conf](images/vehicle_adaption_tutorial/canbus_conf.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:923
msgid "canbus_conf"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:928
msgid "打开`diagnostic`或`cyber_monitor`界面如下"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:930
msgid "![cyber_monitor](images/vehicle_adaption_tutorial/cyber_monitor.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:930
msgid "cyber_monitor"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:932
msgid ""
"可以看到`chassis`和`chassis_detail`均有数据，频率约100Hz。`chassis`下数据主要是车辆的实际转速、实际踏板百分比的反馈，实际方向盘转角百分比，实际档位反馈等信息，在`chassis_detail`是底盘上传给apollo的反馈报文（即apollo接收底盘全部报文）的全部信息。"
" 如下图所示为`chassis`信息"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:935
msgid "![chassis](images/vehicle_adaption_tutorial/chassis.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:935
msgid "chassis"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:937
msgid "如下图所示为`chassis_detail`信息"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:939
msgid ""
"![chassis_detail1](images/vehicle_adaption_tutorial/chassis_detail1.png) "
"![chassis_detail](images/vehicle_adaption_tutorial/chassis_detail.png)"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:939
msgid "chassis_detail1"
msgstr ""

#: ../../../docs/technical_tutorial/apollo_vehicle_adaption_tutorial_cn.md:939
msgid "chassis_detail"
msgstr ""

